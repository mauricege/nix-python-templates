on:
  workflow_dispatch:
  push:
    paths:
      - 'templates/devenv/**'
      - 'includes/**'
      - 'copier.yml'
  pull_request:
    paths:
      - 'templates/devenv/**'
      - 'includes/**'
      - 'copier.yml'
      
  schedule:
    - cron: '0 0 * * 1'  # every Monday at 00:00 UTC

jobs:
  setup:
      if: github.actor != 'github-actions' && !contains(github.event.pull_request.title, '[skip ci]')
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
  
        - name: Install Nix
          uses: cachix/install-nix-action@v30
          with:
            extra_nix_config: |
              access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
        - name: Configure Cachix
          uses: cachix/cachix-action@v15
          with:
            name: devenv
        - name: Install devenv
          run: nix profile install nixpkgs#devenv

        - name: Install Copier
          run: nix profile install nixpkgs#copier
        - name: Generate answers.yml
          run: |
              cat <<-EOF > answers.yml
              codeserver: false
              cudaSupport: false
              framework: devenv
              i_know_what_i_am_doing: false
              declarative_python_environment: true
              python_packages: numpy
              python_package_manager: uv
              python_version: "3.11"
              EOF
        - name: Run Copier
          run: copier copy --force --trust --data-file answers.yml . generated/

        - name: Test with devenv
          working-directory: generated
          run: |
            devenv shell "python -c 'import numpy' || EXIT 1"
        - name: Upload devenv.lock
          uses: actions/upload-artifact@v4
          with:
            name: devenv-lock
            path: generated/devenv.lock
    

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package_manager: [uv]
        python_version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Configure Cachix
        uses: cachix/cachix-action@v15
        with:
          name: devenv
      - name: Install devenv
        run: nix profile install nixpkgs#devenv

      - name: Install Copier
        run: nix profile install nixpkgs#copier

      - name: Generate answers.yml
        run: |
            cat <<-EOF > answers.yml
            codeserver: false
            cudaSupport: false
            framework: devenv
            i_know_what_i_am_doing: false
            declarative_python_environment: true
            python_packages: numpy
            python_package_manager: ${{ matrix.package_manager }}
            python_version: "${{ matrix.python_version }}"
            EOF
            
      - name: Run Copier
        run: copier copy --force --trust --data-file answers.yml . generated/
      
      - name: Download shared devenv lock
        uses: actions/download-artifact@v4
        with:
          name: devenv-lock
          path: generated/


      - name: Test with devenv
        working-directory: generated
        run: |
          devenv shell "python -c 'import numpy' || EXIT 1"
          
  commit_flake_lock:
    needs: test  # This makes the job depend on the success of all test jobs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download shared devenv lock
        uses: actions/download-artifact@v4
        with:
          name: devenv-lock

      - name: Commit and push changes
        env:
          BRANCH_NAME: update-devenv-lock-${{ github.run_id }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
  
          git checkout -b "$BRANCH_NAME"
          git status
          ls
          mv devenv.lock "templates/devenv/{% if stable %}devenv.lock{% endif %}.jinja"
          git add "templates/devenv/{% if stable %}devenv.lock{% endif %}.jinja"
          git status
          git commit -m "Update devenv.lock.jinja" || exit 0
  
          git push origin "$BRANCH_NAME"
  
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update devenv.lock.jinja
          branch: update-devenv-lock-${{ github.run_id }}
          title: Update devenv.lock.jinja
          body: Automated update of devenv.lock.jinja
          base: ${{ github.event.repository.default_branch }}
