name: Test devenv templates

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  filter:
    name: Determine if test should run
    runs-on: ubuntu-latest
    outputs:
      run-tests: ${{ steps.set.outputs.run-tests }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up git configuration
        run: |
          git config --global fetch.depth 0  # Make sure to fetch all commits
          git fetch --all  # Fetch all branches

      - name: Check for relevant changes
        id: set
        run: |
          # Fetch the base branch and head branch correctly
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}  # Fetch base branch
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}  # Fetch head branch
  
          # Check for differences
          CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }})
          echo "Changed files:"
          echo "$CHANGED"
  
          # Determine if relevant files were changed
          if echo "$CHANGED" | grep -qE '^(templates/devenv/|includes/|copier.yml)'; then
            echo "run-tests=true" >> "$GITHUB_OUTPUT"
          else
            echo "run-tests=false" >> "$GITHUB_OUTPUT"
          fi


  test:
    name: test (${{ matrix.package_manager }}, python=${{ matrix.python_version }})
    needs: filter
    if: needs.filter.outputs.run-tests == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package_manager: [uv]
        python_version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Configure Cachix
        uses: cachix/cachix-action@v15
        with:
          name: devenv

      - name: Install devenv
        run: nix profile install nixpkgs#devenv

      - name: Install Copier
        run: nix profile install nixpkgs#copier

      - name: Generate answers.yml
        run: |
          cat <<-EOF > answers.yml
          codeserver: false
          cudaSupport: false
          framework: devenv
          i_know_what_i_am_doing: false
          declarative_python_environment: true
          python_packages: numpy
          python_package_manager: ${{ matrix.package_manager }}
          python_version: "${{ matrix.python_version }}"
          stable: true
          EOF

      - name: Run Copier
        run: copier copy --force --trust --data-file answers.yml . generated/

      - name: Test with devenv
        working-directory: generated
        run: |
          devenv shell "python -c 'import numpy' || EXIT 1"

  all-tests:
    name: All devenv tests passed
    runs-on: ubuntu-latest
    needs: [filter, test]
    if: always()
    steps:
      - name: Final test result
        run: |
          if [ "${{ needs.filter.outputs.run-tests }}" = "false" ]; then
            echo "No relevant files changed â€” skipping tests."
            exit 0
          fi

          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "Some tests failed."
            exit 1
          fi

          echo "All matrix tests passed."
